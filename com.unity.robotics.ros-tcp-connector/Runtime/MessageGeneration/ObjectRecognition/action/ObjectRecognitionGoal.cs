//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.ObjectRecognition
{
    public class ObjectRecognitionGoal : Message
    {
        public const string RosMessageName = "object_recognition_msgs-master/ObjectRecognition";

        //  Optional ROI to use for the object detection
        public bool use_roi;
        public float[] filter_limits;

        public ObjectRecognitionGoal()
        {
            this.use_roi = false;
            this.filter_limits = new float[0];
        }

        public ObjectRecognitionGoal(bool use_roi, float[] filter_limits)
        {
            this.use_roi = use_roi;
            this.filter_limits = filter_limits;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.Add(BitConverter.GetBytes(this.use_roi));
            
            listOfSerializations.Add(BitConverter.GetBytes(filter_limits.Length));
            foreach(var entry in filter_limits)
                listOfSerializations.Add(BitConverter.GetBytes(entry));

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            this.use_roi = BitConverter.ToBoolean(data, offset);
            offset += 1;
            
            var filter_limitsArrayLength = DeserializeLength(data, offset);
            offset += 4;
            this.filter_limits= new float[filter_limitsArrayLength];
            for(var i = 0; i < filter_limitsArrayLength; i++)
            {
                this.filter_limits[i] = BitConverter.ToSingle(data, offset);
                offset += 4;
            }

            return offset;
        }

        public override string ToString()
        {
            return "ObjectRecognitionGoal: " +
            "\nuse_roi: " + use_roi.ToString() +
            "\nfilter_limits: " + System.String.Join(", ", filter_limits.ToList());
        }
    }
}
