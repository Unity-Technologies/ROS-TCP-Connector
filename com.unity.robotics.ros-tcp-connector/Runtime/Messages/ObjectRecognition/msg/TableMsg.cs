//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.ObjectRecognition
{
    [Serializable]
    public class TableMsg : Message
    {
        public const string k_RosMessageName = "object_recognition_msgs/Table";
        public override string RosMessageName => k_RosMessageName;

        //  Informs that a planar table has been detected at a given location
        public HeaderMsg header;
        //  The pose gives you the transform that take you to the coordinate system
        //  of the table, with the origin somewhere in the table plane and the 
        //  z axis normal to the plane
        public Geometry.PoseMsg pose;
        //  There is no guarantee that the table does NOT extend further than the
        //  convex hull; this is just as far as we've observed it.
        //  The origin of the table coordinate system is inside the convex hull
        //  Set of points forming the convex hull of the table
        public Geometry.PointMsg[] convex_hull;

        public TableMsg()
        {
            this.header = new HeaderMsg();
            this.pose = new Geometry.PoseMsg();
            this.convex_hull = new Geometry.PointMsg[0];
        }

        public TableMsg(HeaderMsg header, Geometry.PoseMsg pose, Geometry.PointMsg[] convex_hull)
        {
            this.header = header;
            this.pose = pose;
            this.convex_hull = convex_hull;
        }

        public static TableMsg Deserialize(MessageDeserializer deserializer) => new TableMsg(deserializer);

        private TableMsg(MessageDeserializer deserializer)
        {
            this.header = HeaderMsg.Deserialize(deserializer);
            this.pose = Geometry.PoseMsg.Deserialize(deserializer);
            deserializer.Read(out this.convex_hull, Geometry.PointMsg.Deserialize, deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.pose);
            serializer.WriteLength(this.convex_hull);
            serializer.Write(this.convex_hull);
        }

        public override string ToString()
        {
            return "TableMsg: " +
            "\nheader: " + header.ToString() +
            "\npose: " + pose.ToString() +
            "\nconvex_hull: " + System.String.Join(", ", convex_hull.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
