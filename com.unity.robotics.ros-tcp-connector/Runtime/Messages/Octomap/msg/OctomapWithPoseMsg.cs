//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.Octomap
{
    [Serializable]
    public class OctomapWithPoseMsg : Message
    {
        public const string k_RosMessageName = "octomap_msgs/OctomapWithPose";
        public override string RosMessageName => k_RosMessageName;

        //  A 3D map in binary format, as Octree
        public HeaderMsg header;
        //  The pose of the octree with respect to the header frame 
        public Geometry.PoseMsg origin;
        //  The actual octree msg
        public OctomapMsg octomap;

        public OctomapWithPoseMsg()
        {
            this.header = new HeaderMsg();
            this.origin = new Geometry.PoseMsg();
            this.octomap = new OctomapMsg();
        }

        public OctomapWithPoseMsg(HeaderMsg header, Geometry.PoseMsg origin, OctomapMsg octomap)
        {
            this.header = header;
            this.origin = origin;
            this.octomap = octomap;
        }

        public static OctomapWithPoseMsg Deserialize(MessageDeserializer deserializer) => new OctomapWithPoseMsg(deserializer);

        private OctomapWithPoseMsg(MessageDeserializer deserializer)
        {
            this.header = HeaderMsg.Deserialize(deserializer);
            this.origin = Geometry.PoseMsg.Deserialize(deserializer);
            this.octomap = OctomapMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.origin);
            serializer.Write(this.octomap);
        }

        public override string ToString()
        {
            return "OctomapWithPoseMsg: " +
            "\nheader: " + header.ToString() +
            "\norigin: " + origin.ToString() +
            "\noctomap: " + octomap.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
