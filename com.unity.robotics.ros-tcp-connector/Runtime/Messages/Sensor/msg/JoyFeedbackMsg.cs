//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Sensor
{
    [Serializable]
    public class JoyFeedbackMsg : Message
    {
        public const string k_RosMessageName = "sensor_msgs/JoyFeedback";
        public override string RosMessageName => k_RosMessageName;

        //  Declare of the type of feedback
        public const byte TYPE_LED = 0;
        public const byte TYPE_RUMBLE = 1;
        public const byte TYPE_BUZZER = 2;
        public byte type;
        //  This will hold an id number for each type of each feedback.
        //  Example, the first led would be id=0, the second would be id=1
        public byte id;
        //  Intensity of the feedback, from 0.0 to 1.0, inclusive.  If device is
        //  actually binary, driver should treat 0<=x<0.5 as off, 0.5<=x<=1 as on.
        public float intensity;

        public JoyFeedbackMsg()
        {
            this.type = 0;
            this.id = 0;
            this.intensity = 0.0f;
        }

        public JoyFeedbackMsg(byte type, byte id, float intensity)
        {
            this.type = type;
            this.id = id;
            this.intensity = intensity;
        }

        public static JoyFeedbackMsg Deserialize(MessageDeserializer deserializer) => new JoyFeedbackMsg(deserializer);

        private JoyFeedbackMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.type);
            deserializer.Read(out this.id);
            deserializer.Read(out this.intensity);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.type);
            serializer.Write(this.id);
            serializer.Write(this.intensity);
        }

        public override string ToString()
        {
            return "JoyFeedbackMsg: " +
            "\ntype: " + type.ToString() +
            "\nid: " + id.ToString() +
            "\nintensity: " + intensity.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
