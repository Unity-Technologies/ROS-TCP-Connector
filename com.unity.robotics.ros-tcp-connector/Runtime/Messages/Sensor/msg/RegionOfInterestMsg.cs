//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Sensor
{
    [Serializable]
    public class RegionOfInterestMsg : Message
    {
        public const string k_RosMessageName = "sensor_msgs/RegionOfInterest";
        public override string RosMessageName => k_RosMessageName;

        //  This message is used to specify a region of interest within an image.
        // 
        //  When used to specify the ROI setting of the camera when the image was
        //  taken, the height and width fields should either match the height and
        //  width fields for the associated image; or height = width = 0
        //  indicates that the full resolution image was captured.
        public uint x_offset;
        //  Leftmost pixel of the ROI
        //  (0 if the ROI includes the left edge of the image)
        public uint y_offset;
        //  Topmost pixel of the ROI
        //  (0 if the ROI includes the top edge of the image)
        public uint height;
        //  Height of ROI
        public uint width;
        //  Width of ROI
        //  True if a distinct rectified ROI should be calculated from the "raw"
        //  ROI in this message. Typically this should be False if the full image
        //  is captured (ROI not used), and True if a subwindow is captured (ROI
        //  used).
        public bool do_rectify;

        public RegionOfInterestMsg()
        {
            this.x_offset = 0;
            this.y_offset = 0;
            this.height = 0;
            this.width = 0;
            this.do_rectify = false;
        }

        public RegionOfInterestMsg(uint x_offset, uint y_offset, uint height, uint width, bool do_rectify)
        {
            this.x_offset = x_offset;
            this.y_offset = y_offset;
            this.height = height;
            this.width = width;
            this.do_rectify = do_rectify;
        }

        public static RegionOfInterestMsg Deserialize(MessageDeserializer deserializer) => new RegionOfInterestMsg(deserializer);

        private RegionOfInterestMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.x_offset);
            deserializer.Read(out this.y_offset);
            deserializer.Read(out this.height);
            deserializer.Read(out this.width);
            deserializer.Read(out this.do_rectify);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.x_offset);
            serializer.Write(this.y_offset);
            serializer.Write(this.height);
            serializer.Write(this.width);
            serializer.Write(this.do_rectify);
        }

        public override string ToString()
        {
            return "RegionOfInterestMsg: " +
            "\nx_offset: " + x_offset.ToString() +
            "\ny_offset: " + y_offset.ToString() +
            "\nheight: " + height.ToString() +
            "\nwidth: " + width.ToString() +
            "\ndo_rectify: " + do_rectify.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
