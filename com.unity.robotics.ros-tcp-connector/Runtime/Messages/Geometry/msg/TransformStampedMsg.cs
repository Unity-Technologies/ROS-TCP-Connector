//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Geometry
{
    [Serializable]
    public class TransformStampedMsg : Message
    {
        public const string k_RosMessageName = "geometry_msgs/TransformStamped";
        public override string RosMessageName => k_RosMessageName;

        //  This expresses a transform from coordinate frame header.frame_id
        //  to the coordinate frame child_frame_id at the time of header.stamp
        // 
        //  This message is mostly used by the
        //  <a href="https://index.ros.org/p/tf2/">tf2</a> package.
        //  See its documentation for more information.
        // 
        //  The child_frame_id is necessary in addition to the frame_id
        //  in the Header to communicate the full reference for the transform
        //  in a self contained message.
        //  The frame id in the header is used as the reference frame of this transform.
        public Std.HeaderMsg header;
        //  The frame id of the child frame to which this transform points.
        public string child_frame_id;
        //  Translation and rotation in 3-dimensions of child_frame_id from header.frame_id.
        public TransformMsg transform;

        public TransformStampedMsg()
        {
            this.header = new Std.HeaderMsg();
            this.child_frame_id = "";
            this.transform = new TransformMsg();
        }

        public TransformStampedMsg(Std.HeaderMsg header, string child_frame_id, TransformMsg transform)
        {
            this.header = header;
            this.child_frame_id = child_frame_id;
            this.transform = transform;
        }

        public static TransformStampedMsg Deserialize(MessageDeserializer deserializer) => new TransformStampedMsg(deserializer);

        private TransformStampedMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.child_frame_id);
            this.transform = TransformMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.child_frame_id);
            serializer.Write(this.transform);
        }

        public override string ToString()
        {
            return "TransformStampedMsg: " +
            "\nheader: " + header.ToString() +
            "\nchild_frame_id: " + child_frame_id.ToString() +
            "\ntransform: " + transform.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
