//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.RosTcpEndpoint
{
    public class MRosUnitySrvMessage : Message
    {
        public const string RosMessageName = "ros_tcp_endpoint/RosUnitySrvMessage";

        public int srv_id;
        public bool is_request;
        public string topic;
        public byte[] payload;

        public MRosUnitySrvMessage()
        {
            this.srv_id = 0;
            this.is_request = false;
            this.topic = "";
            this.payload = new byte[0];
        }

        public MRosUnitySrvMessage(int srv_id, bool is_request, string topic, byte[] payload)
        {
            this.srv_id = srv_id;
            this.is_request = is_request;
            this.topic = topic;
            this.payload = payload;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.Add(BitConverter.GetBytes(this.srv_id));
            listOfSerializations.Add(BitConverter.GetBytes(this.is_request));
            listOfSerializations.Add(SerializeString(this.topic));

            listOfSerializations.Add(BitConverter.GetBytes(payload.Length));
            listOfSerializations.Add(this.payload);

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            this.srv_id = BitConverter.ToInt32(data, offset);
            offset += 4;
            this.is_request = BitConverter.ToBoolean(data, offset);
            offset += 1;
            var topicStringBytesLength = DeserializeLength(data, offset);
            offset += 4;
            this.topic = DeserializeString(data, offset, topicStringBytesLength);
            offset += topicStringBytesLength;

            var payloadArrayLength = DeserializeLength(data, offset);
            offset += 4;
            this.payload = new byte[payloadArrayLength];
            for (var i = 0; i < payloadArrayLength; i++)
            {
                this.payload[i] = data[offset];
                offset += 1;
            }

            return offset;
        }

        public override string ToString()
        {
            return "MRosUnitySrvMessage: " +
            "\nsrv_id: " + srv_id.ToString() +
            "\nis_request: " + is_request.ToString() +
            "\ntopic: " + topic.ToString() +
            "\npayload: " + System.String.Join(", ", payload.ToList());
        }
    }
}
