//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Shape
{
    [Serializable]
    public class SolidPrimitiveMsg : Message
    {
        public const string k_RosMessageName = "shape_msgs/SolidPrimitive";
        public override string RosMessageName => k_RosMessageName;

        //  Defines box, sphere, cylinder, and cone.
        //  All shapes are defined to have their bounding boxes centered around 0,0,0.
        public const byte BOX = 1;
        public const byte SPHERE = 2;
        public const byte CYLINDER = 3;
        public const byte CONE = 4;
        //  The type of the shape
        public byte type;
        //  The dimensions of the shape
        public double[] dimensions;
        //  At no point will dimensions have a length > 3.
        //  The meaning of the shape dimensions: each constant defines the index in the 'dimensions' array.
        //  For type BOX, the X, Y, and Z dimensions are the length of the corresponding sides of the box.
        public const byte BOX_X = 0;
        public const byte BOX_Y = 1;
        public const byte BOX_Z = 2;
        //  For the SPHERE type, only one component is used, and it gives the radius of the sphere.
        public const byte SPHERE_RADIUS = 0;
        //  For the CYLINDER and CONE types, the center line is oriented along the Z axis.
        //  Therefore the CYLINDER_HEIGHT (CONE_HEIGHT) component of dimensions gives the
        //  height of the cylinder (cone).
        //  The CYLINDER_RADIUS (CONE_RADIUS) component of dimensions gives the radius of
        //  the base of the cylinder (cone).
        //  Cone and cylinder primitives are defined to be circular. The tip of the cone
        //  is pointing up, along +Z axis.
        public const byte CYLINDER_HEIGHT = 0;
        public const byte CYLINDER_RADIUS = 1;
        public const byte CONE_HEIGHT = 0;
        public const byte CONE_RADIUS = 1;

        public SolidPrimitiveMsg()
        {
            this.type = 0;
            this.dimensions = new double[0];
        }

        public SolidPrimitiveMsg(byte type, double[] dimensions)
        {
            this.type = type;
            this.dimensions = dimensions;
        }

        public static SolidPrimitiveMsg Deserialize(MessageDeserializer deserializer) => new SolidPrimitiveMsg(deserializer);

        private SolidPrimitiveMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.type);
            deserializer.Read(out this.dimensions, sizeof(double), deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.type);
            serializer.WriteLength(this.dimensions);
            serializer.Write(this.dimensions);
        }

        public override string ToString()
        {
            return "SolidPrimitiveMsg: " +
            "\ntype: " + type.ToString() +
            "\ndimensions: " + System.String.Join(", ", dimensions.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
