//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Visualization
{
    [Serializable]
    public class InteractiveMarkerInitMsg : Message
    {
        public const string k_RosMessageName = "visualization_msgs/InteractiveMarkerInit";
        public override string RosMessageName => k_RosMessageName;

        //  Identifying string. Must be unique in the topic namespace
        //  that this server works on.
        public string server_id;
        //  Sequence number.
        //  The client will use this to detect if it has missed a subsequent
        //  update.  Every update message will have the same sequence number as
        //  an init message.  Clients will likely want to unsubscribe from the
        //  init topic after a successful initialization to avoid receiving
        //  duplicate data.
        public ulong seq_num;
        //  All markers.
        public InteractiveMarkerMsg[] markers;

        public InteractiveMarkerInitMsg()
        {
            this.server_id = "";
            this.seq_num = 0;
            this.markers = new InteractiveMarkerMsg[0];
        }

        public InteractiveMarkerInitMsg(string server_id, ulong seq_num, InteractiveMarkerMsg[] markers)
        {
            this.server_id = server_id;
            this.seq_num = seq_num;
            this.markers = markers;
        }

        public static InteractiveMarkerInitMsg Deserialize(MessageDeserializer deserializer) => new InteractiveMarkerInitMsg(deserializer);

        private InteractiveMarkerInitMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.server_id);
            deserializer.Read(out this.seq_num);
            deserializer.Read(out this.markers, InteractiveMarkerMsg.Deserialize, deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.server_id);
            serializer.Write(this.seq_num);
            serializer.WriteLength(this.markers);
            serializer.Write(this.markers);
        }

        public override string ToString()
        {
            return "InteractiveMarkerInitMsg: " +
            "\nserver_id: " + server_id.ToString() +
            "\nseq_num: " + seq_num.ToString() +
            "\nmarkers: " + System.String.Join(", ", markers.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
