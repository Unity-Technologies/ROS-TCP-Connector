//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Diagnostic
{
    public class MSelfTestResponse : Message
    {
        public const string RosMessageName = "diagnostic_msgs/SelfTest";

        public string id;
        public sbyte passed;
        public MDiagnosticStatus[] status;

        public MSelfTestResponse()
        {
            this.id = "";
            this.passed = 0;
            this.status = new MDiagnosticStatus[0];
        }

        public MSelfTestResponse(string id, sbyte passed, MDiagnosticStatus[] status)
        {
            this.id = id;
            this.passed = passed;
            this.status = status;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.Add(SerializeString(this.id));
            listOfSerializations.Add(new[] { (byte)this.passed });

            listOfSerializations.Add(BitConverter.GetBytes(status.Length));
            foreach (var entry in status)
                listOfSerializations.Add(entry.Serialize());

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            var idStringBytesLength = DeserializeLength(data, offset);
            offset += 4;
            this.id = DeserializeString(data, offset, idStringBytesLength);
            offset += idStringBytesLength;
            this.passed = (sbyte)data[offset]; ;
            offset += 1;

            var statusArrayLength = DeserializeLength(data, offset);
            offset += 4;
            this.status = new MDiagnosticStatus[statusArrayLength];
            for (var i = 0; i < statusArrayLength; i++)
            {
                this.status[i] = new MDiagnosticStatus();
                offset = this.status[i].Deserialize(data, offset);
            }

            return offset;
        }

        public override string ToString()
        {
            return "MSelfTestResponse: " +
            "\nid: " + id.ToString() +
            "\npassed: " + passed.ToString() +
            "\nstatus: " + System.String.Join(", ", status.ToList());
        }
    }
}
